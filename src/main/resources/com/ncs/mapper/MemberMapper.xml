<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ncs.mapper.MemberMapper">
	<resultMap id="memberMap" type="com.ncs.vo.MemberVO">
		<result property="userid" column="userid" />
		<result property="userpw" column="userpw" />
		<result property="username" column="username" />
		<result property="enabled" column="enabled" />
		<result property="email" column="email" />
		<result property="nickname" column="nickname" />
		<result property="joindate" column="joindate" />
		<result property="outdate" column="outdate" />
		<result property="exist" column="exist" />
		<result property="image" column="image" />
		<result property="apoint" column="apoint" />
		<result property="wpoint" column="wpoint" />
		<result property="follow" column="follow" />
		<result property="following" column="following" />
		<collection property="authList" resultMap="authMap"></collection>
	</resultMap>
	<resultMap type="com.ncs.vo.AuthVO" id="authMap">
		<result property="userid" column="userid" />
		<result property="auth" column="auth" />
	</resultMap>

	<insert id="register">
		insert into member(userid,userpw,email,username,nickname,image,allowed) 
		values(#{userid},#{userpw},#{email},#{username},#{nickname},#{image},#{allowed})
	</insert>

	<insert id="auth">
		insert into member_auth(userid) values(#{userid})
	</insert>

	<select id="read" resultMap="memberMap">
		SELECT
		mem.userid, userpw, username,email,nickname,image,apoint,
		enabled, auth
		FROM
		member mem LEFT OUTER JOIN
		member_auth auth on mem.userid = auth.userid
		WHERE mem.userid = #{userid}
	</select>
	
	<select id="get" resultType="com.ncs.vo.MemberVO">
		select userid, userpw, username, nickname, image, apoint
		from member 
		where userid = #{userid}
	</select>
	
	<update id="pointUp">
		update member set 
		apoint = apoint + #{apoint} 
		where userid = #{userid}
	</update>
		
	<update id="pointDown">
		update member set 
		apoint = apoint - #{apoint}
		where userid = #{userid}
	</update>

	<update id="edit">
		update member set
		email = #{email} ,
		username = #{username},
		nickname = #{nickname},
		allowed = #{allowed}
		where userid = #{userid}
	</update>

	<update id="passwordChange">
		update member set
		userpw = #{userpw} where userid = #{userid}
	</update>
	
	<select id="historyBoardList" resultType="com.ncs.vo.QnaVO">
		select * from qna where id = #{userid}
		union 
		select * from tech where id = #{userid}
		union 
		select * from columnm where id = #{userid}
		union
		select * from comunity where id = #{userid}
		union
		select * from jobs where id = #{userid}
		order by regdate desc
		limit #{start} , #{perPageRow}
	</select>
	
	<select id="historyRowCount" resultType="int">
   		select * from qna where id = #{userid}
		union 
		select * from tech where id = #{userid}
		union 
		select * from columnm where id = #{userid}
		union
		select * from comunity where id = #{userid}
		union
		select * from jobs where id = #{userid}
	</select>

	<select id="useridDuplicate" resultType="int">
		select count(*) from member where userid = #{userid}
	</select>

	<insert id="addAuthKey">
		insert into authkey values (#{userid},#{authkey})
	</insert>

	<select id="getAuthKey" resultType="int">
		select count(*) from authkey where userid = #{userid} and authkey = #{authkey}
	</select>

	<select id="nicknameDuplicate" resultType="int">
		select count(*) from member where nickname = #{nickname}
	</select>
	
	<select id="emailDuplicate" resultType="int">
		select count(*) from member where email = #{email}
	</select>
	
	<insert id="sendAuthkey">
		insert into authkey (email,authkey) values(#{email},#{authkey})
	</insert>

	<select id="authKeyCheck" resultType="int">
		select count(*) from authkey where email = #{email} and authkey = #{authkey}
	</select>
	
	<select id="sendFindId" resultType="com.ncs.vo.MemberVO">
		select * from member where email = #{email}
	</select>
	
	<select id="sendFindPassword" resultType="com.ncs.vo.MemberVO">
		select * from member where email = #{email} and userid = #{userid}
	</select>
</mapper>
  